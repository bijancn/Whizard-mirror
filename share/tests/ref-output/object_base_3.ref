* Test output: object_base_3
*   Purpose: find objects by path

* Create prototypes for tag and tag composite

* Create nested composite

tag obj3 ||abstract|| (1) {
   M1: tag obj1 ||abstract|| (2) {
     M1: tag foo ||abstract|| (1)
   }
   M2: type(obj1) obj2 ||abstract|| (1)
   M3: tag bar ||abstract|| (1)
 }

* Return pointer to obj1

tag obj1 ||abstract|| (2) {
   M1: tag foo ||abstract|| (1)
 }

* Return pointer to obj1.foo

tag foo ||abstract|| (1)

* Return pointer to obj2.foo

tag foo ||abstract|| (1)

* Starting at obj1, return pointer to obj2

type(obj1) obj2 ||abstract|| (1)

* Starting at obj1, return pointer to obj2.foo

tag foo ||abstract|| (1)

* Starting at obj1, return pointer to bar

tag bar ||abstract|| (1)

* Starting at bar, return pointer to obj1.foo

tag foo ||abstract|| (1)

* Cleanup

* Test output end: object_base_3
