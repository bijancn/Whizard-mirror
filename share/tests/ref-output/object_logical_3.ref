* Test output: object_logical_3
*   Purpose: simple composite assignments

* Create atomic objects

logical true ||constant|| = true
logical fal1 ||constant|| = false
logical fal2 ||constant|| = false
logical unknown ||constant|| = ???

* Import into composite objects

logical lval1 ||variable|| = true
logical lval2 ||variable|| = false
logical lval3 ||variable|| = ???
logical lval4 ||variable|| = false

* Create reference lref1 => lval4

logical lref1 ||variable|| = false

* lval2 = lval1

logical lval1 ||variable|| = true
logical lval2 ||variable|| = true
logical lval3 ||variable|| = ???
logical lval4 ||variable|| = false
logical lref1 ||variable|| = false

* lval4 = lval1
* lref1 value should not change

logical lval1 ||variable|| = true
logical lval2 ||variable|| = true
logical lval3 ||variable|| = ???
logical lval4 ||variable|| = true
logical lref1 ||variable|| = false

* lval2 = lval3

logical lval1 ||variable|| = true
logical lval2 ||variable|| = ???
logical lval3 ||variable|| = ???
logical lval4 ||variable|| = true
logical lref1 ||variable|| = false

* Cleanup

prototype allocated = F
true allocated = F
fal1 allocated = F
fal2 allocated = F
unknown allocated = F
lval1 allocated = F
lval2 allocated = F
lval3 allocated = F
lval4 allocated = F
lref1 allocated = F

* Test output end: object_logical_3
