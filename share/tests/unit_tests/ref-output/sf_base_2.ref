* Test output: sf_base_2
*   Purpose: initialize and fill test structure function object

* Initialize configuration data

* Initialize structure-function object

 SF test data:
   model     = Test
   incoming  = f(25)
   outgoing  = f(25)
   radiated  = f(25)
   mass      =  1.250000000000E+02
   collinear = T
 SF instance: [initialized]
   beam      = 1
   incoming  = 1
   radiated  = 2
   outgoing  = 3
 Interaction: 1
 Incoming:
 Particle 1
  [momentum undefined]
 mask [fch] = [FFgF]
 internal links: X => 2 3
 Outgoing:
 Particle 2
  [momentum undefined]
 mask [fch] = [FFgF]
 internal links: 1 => X
 Particle 3
  [momentum undefined]
 mask [fch] = [FFgF]
 internal links: 1 => X
 State matrix:  norm =  1.000000000000E+00
 [f(25) h(0)]
   [f(25) h(0)]
     [f(25) h(0)] => ME(1) = ( 0.000000000000E+00, 0.000000000000E+00)

* Initialize incoming momentum with E=500

 E =   5.000000000000E+02
 P =   0.000000000000E+00  0.000000000000E+00  4.841229182759E+02

* Set kinematics for x=0

 SF test data:
   model     = Test
   incoming  = f(25)
   outgoing  = f(25)
   radiated  = f(25)
   mass      =  1.250000000000E+02
   collinear = T
 SF instance: [kinematics failed]
   beam      = 1
   incoming  = 1
   radiated  = 2
   outgoing  = 3
 Interaction: 1
 Incoming:
 Particle 1
 E =   5.000000000000E+02
 P =   0.000000000000E+00  0.000000000000E+00  4.841229182759E+02
 mask [fch] = [FFgF]
 internal links: X => 2 3
 Outgoing:
 Particle 2
 E =   5.000000000000E+02
 P =   0.000000000000E+00  0.000000000000E+00  5.000000000000E+02
 mask [fch] = [FFgF]
 internal links: 1 => X
 Particle 3
 E =   0.000000000000E+00
 P =   0.000000000000E+00  0.000000000000E+00  0.000000000000E+00
 mask [fch] = [FFgF]
 internal links: 1 => X
 State matrix:  norm =  1.000000000000E+00
 [f(25) h(0)]
   [f(25) h(0)]
     [f(25) h(0)] => ME(1) = ( 0.000000000000E+00, 0.000000000000E+00)

x =  0.0000000
f =  0.0000000

* Set kinematics for x=1

 SF test data:
   model     = Test
   incoming  = f(25)
   outgoing  = f(25)
   radiated  = f(25)
   mass      =  1.250000000000E+02
   collinear = T
 SF instance: [kinematics set]
   beam      = 1
   incoming  = 1
   radiated  = 2
   outgoing  = 3
 Interaction: 1
 Incoming:
 Particle 1
 E =   5.000000000000E+02
 P =   0.000000000000E+00  0.000000000000E+00  4.841229182759E+02
 mask [fch] = [FFgF]
 internal links: X => 2 3
 Outgoing:
 Particle 2
 E =   0.000000000000E+00
 P =   0.000000000000E+00  0.000000000000E+00  0.000000000000E+00
 mask [fch] = [FFgF]
 internal links: 1 => X
 Particle 3
 E =   5.000000000000E+02
 P =   0.000000000000E+00  0.000000000000E+00  4.841229182759E+02
 mask [fch] = [FFgF]
 internal links: 1 => X
 State matrix:  norm =  1.000000000000E+00
 [f(25) h(0)]
   [f(25) h(0)]
     [f(25) h(0)] => ME(1) = ( 0.000000000000E+00, 0.000000000000E+00)

x =  1.0000000
f =  1.0000000

* Set kinematics for x=0.5

 SF test data:
   model     = Test
   incoming  = f(25)
   outgoing  = f(25)
   radiated  = f(25)
   mass      =  1.250000000000E+02
   collinear = T
 SF instance: [kinematics set]
   beam      = 1
   incoming  = 1
   radiated  = 2
   outgoing  = 3
 Interaction: 1
 Incoming:
 Particle 1
 E =   5.000000000000E+02
 P =   0.000000000000E+00  0.000000000000E+00  4.841229182759E+02
 mask [fch] = [FFgF]
 internal links: X => 2 3
 Outgoing:
 Particle 2
 E =   2.500000000000E+02
 P =   0.000000000000E+00  0.000000000000E+00  2.500000000000E+02
 mask [fch] = [FFgF]
 internal links: 1 => X
 Particle 3
 E =   2.500000000000E+02
 P =   0.000000000000E+00  0.000000000000E+00  2.165063509461E+02
 mask [fch] = [FFgF]
 internal links: 1 => X
 State matrix:  norm =  1.000000000000E+00
 [f(25) h(0)]
   [f(25) h(0)]
     [f(25) h(0)] => ME(1) = ( 0.000000000000E+00, 0.000000000000E+00)

x =  0.5000000
f =  1.0000000

* Set kinematics with mapping for r=0.8

 SF test data:
   model     = Test
   incoming  = f(25)
   outgoing  = f(25)
   radiated  = f(25)
   mass      =  1.250000000000E+02
   collinear = T
 SF instance: [kinematics set]
   beam      = 1
   incoming  = 1
   radiated  = 2
   outgoing  = 3
 Interaction: 1
 Incoming:
 Particle 1
 E =   5.000000000000E+02
 P =   0.000000000000E+00  0.000000000000E+00  4.841229182759E+02
 mask [fch] = [FFgF]
 internal links: X => 2 3
 Outgoing:
 Particle 2
 E =   1.800000000000E+02
 P =   0.000000000000E+00  0.000000000000E+00  1.800000000000E+02
 mask [fch] = [FFgF]
 internal links: 1 => X
 Particle 3
 E =   3.200000000000E+02
 P =   0.000000000000E+00  0.000000000000E+00  2.945759664331E+02
 mask [fch] = [FFgF]
 internal links: 1 => X
 State matrix:  norm =  1.000000000000E+00
 [f(25) h(0)]
   [f(25) h(0)]
     [f(25) h(0)] => ME(1) = ( 0.000000000000E+00, 0.000000000000E+00)

x =  0.6400000
f =  1.6000000

* Recover x from momenta

x =  0.6400000

* Compute inverse kinematics for x=0.64 and evaluate

 SF test data:
   model     = Test
   incoming  = f(25)
   outgoing  = f(25)
   radiated  = f(25)
   mass      =  1.250000000000E+02
   collinear = T
 SF instance: [evaluated]
   beam      = 1
   incoming  = 1
   radiated  = 2
   outgoing  = 3
 Interaction: 2
 Incoming:
 Particle 1
 E =   5.000000000000E+02
 P =   0.000000000000E+00  0.000000000000E+00  4.841229182759E+02
 mask [fch] = [FFgF]
 internal links: X => 2 3
 Outgoing:
 Particle 2
 E =   1.800000000000E+02
 P =   0.000000000000E+00  0.000000000000E+00  1.800000000000E+02
 mask [fch] = [FFgF]
 internal links: 1 => X
 Particle 3
 E =   3.200000000000E+02
 P =   0.000000000000E+00  0.000000000000E+00  2.945759664331E+02
 mask [fch] = [FFgF]
 internal links: 1 => X
 State matrix:  norm =  1.000000000000E+00
 [f(25) h(0)]
   [f(25) h(0)]
     [f(25) h(0)] => ME(1) = ( 1.000000000000E+00, 0.000000000000E+00)

r =  0.8000000
f =  1.6000000

* Cleanup

* Test output end: sf_base_2
