* Test output: object_comparison_2
*   Purpose: check chained integer comparison operators

* Create expression prototype: compare

logical compare ||operator|binary|abstract||

* Create expressions

success = T
success = T
success = T
success = T

logical compare ||operator|binary|constant|| {
   A1: integer undef ||constant|| = ???
   O2: ==
   A2: integer j ||constant|| = 3
 } = ???
logical compare ||operator|binary|constant|| {
   A1: integer i ||constant|| = 2
   O2: ==
   A2: integer undef ||constant|| = ???
 } = ???
logical compare ||operator|binary|constant|| {
   A1: integer i ||constant|| = 2
   O2: <
   A2: integer j ||constant|| = 3
   O3: <
   A3: integer k ||constant|| = 4
 } = ???
logical compare ||operator|binary|constant|| {
   A1: integer i ||constant|| = 2
   O2: <
   A2: integer j ||constant|| = 3
   O3: <=
   A3: integer k ||constant|| = 4
   O4: >
   A4: integer l ||constant|| = 5
 } = ???

??? == 3
2 == ???
2 < 3 < 4
2 < 3 <= 4 > 5

* Evaluate

logical compare ||operator|binary|constant|| {
   A1: integer undef ||constant|| = ???
   O2: ==
   A2: integer j ||constant|| = 3
 } = ???
logical compare ||operator|binary|constant|| {
   A1: integer i ||constant|| = 2
   O2: ==
   A2: integer undef ||constant|| = ???
 } = ???
logical compare ||operator|binary|constant|| {
   A1: integer i ||constant|| = 2
   O2: <
   A2: integer j ||constant|| = 3
   O3: <
   A3: integer k ||constant|| = 4
 } = true
logical compare ||operator|binary|constant|| {
   A1: integer i ||constant|| = 2
   O2: <
   A2: integer j ||constant|| = 3
   O3: <=
   A3: integer k ||constant|| = 4
   O4: >
   A4: integer l ||constant|| = 5
 } = false

???
???
true
false

* Cleanup

* Test output end: object_comparison_2
