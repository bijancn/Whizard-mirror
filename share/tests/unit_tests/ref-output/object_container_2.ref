* Test output: object_container_2
*   Purpose: construct nested containers

* Create expression prototype: container

object container ||operator|binary|abstract||

* Create expressions

container a1 ||operator|binary|constant|| {
   O1: :
   A1: container item1 ||operator|binary|constant|| {
     O1: ,
     A1: container item1 ||operator|binary|constant|| {
       O1: =>
       A1: integer item1 ||constant|| = 1
       A2: integer item2 ||constant|| = 2
     } = (<>, <>)
     A2: integer item2 ||constant|| = 3
   } = (<>, <>)
   A2: integer item2 ||constant|| = 4
 } = (<>, <>)

container a2 ||operator|binary|constant|| {
   O1: :
   A1: container item1 ||operator|binary|constant|| {
     O1: =>
     A1: container item1 ||operator|binary|constant|| {
       O1: ,
       A1: integer item1 ||constant|| = 1
       A2: integer item2 ||constant|| = 2
     } = (<>, <>)
     A2: integer item2 ||constant|| = 3
   } = (<>, <>)
   A2: integer item2 ||constant|| = 4
 } = (<>, <>)

container a3 ||operator|binary|constant|| {
   O1: ,
   A1: container item1 ||operator|binary|constant|| {
     O1: =>
     A1: container item1 ||operator|binary|constant|| {
       O1: :
       A1: integer item1 ||constant|| = 1
       A2: integer item2 ||constant|| = 2
     } = (<>, <>)
     A2: integer item2 ||constant|| = 3
   } = (<>, <>)
   A2: integer item2 ||constant|| = 4
 } = (<>, <>)

container a4 ||operator|binary|constant|| {
   O1: =>
   A1: container item1 ||operator|binary|constant|| {
     O1: ,
     A1: container item1 ||operator|binary|constant|| {
       O1: :
       A1: integer item1 ||constant|| = 1
       A2: integer item2 ||constant|| = 2
     } = (<>, <>)
     A2: integer item2 ||constant|| = 3
   } = (<>, <>)
   A2: integer item2 ||constant|| = 4
 } = (<>, <>)

container a5 ||operator|binary|constant|| {
   O1: ,
   A1: container item1 ||operator|binary|constant|| {
     O1: ,
     A1: container item1 ||operator|binary|constant|| {
       O1: :
       A1: integer item1 ||constant|| = 1
       A2: integer item2 ||constant|| = 2
     } = (<>, <>)
     A2: integer item2 ||constant|| = 3
   } = (<>, <>)
   A2: integer item2 ||constant|| = 4
 } = (<>, <>)

((1 => 2), 3):4
(1, 2 => 3):4
(1:2 => 3), 4
1:2, 3 => 4
(1:2, 3), 4

* Resolve and evaluate

success = T
success = T
success = T
success = T
success = T

container a1 ||operator|binary|constant|| {
   O1: :
   A1: container item1 ||operator|binary|constant|| {
     O1: ,
     A1: container item1 ||operator|binary|constant|| {
       O1: =>
       A1: integer item1 ||constant|| = 1
       A2: integer item2 ||constant|| = 2
     } = (1, 2)
     A2: integer item2 ||constant|| = 3
   } = ((1 => 2), 3)
   A2: integer item2 ||constant|| = 4
 } = (((1 => 2), 3), 4)

container a2 ||operator|binary|constant|| {
   O1: :
   A1: container item1 ||operator|binary|constant|| {
     O1: =>
     A1: container item1 ||operator|binary|constant|| {
       O1: ,
       A1: integer item1 ||constant|| = 1
       A2: integer item2 ||constant|| = 2
     } = (1, 2)
     A2: integer item2 ||constant|| = 3
   } = ((1, 2), 3)
   A2: integer item2 ||constant|| = 4
 } = ((1, 2 => 3), 4)

container a3 ||operator|binary|constant|| {
   O1: ,
   A1: container item1 ||operator|binary|constant|| {
     O1: =>
     A1: container item1 ||operator|binary|constant|| {
       O1: :
       A1: integer item1 ||constant|| = 1
       A2: integer item2 ||constant|| = 2
     } = (1, 2)
     A2: integer item2 ||constant|| = 3
   } = ((1:2), 3)
   A2: integer item2 ||constant|| = 4
 } = ((1:2 => 3), 4)

container a4 ||operator|binary|constant|| {
   O1: =>
   A1: container item1 ||operator|binary|constant|| {
     O1: ,
     A1: container item1 ||operator|binary|constant|| {
       O1: :
       A1: integer item1 ||constant|| = 1
       A2: integer item2 ||constant|| = 2
     } = (1, 2)
     A2: integer item2 ||constant|| = 3
   } = ((1:2), 3)
   A2: integer item2 ||constant|| = 4
 } = ((1:2, 3), 4)

container a5 ||operator|binary|constant|| {
   O1: ,
   A1: container item1 ||operator|binary|constant|| {
     O1: ,
     A1: container item1 ||operator|binary|constant|| {
       O1: :
       A1: integer item1 ||constant|| = 1
       A2: integer item2 ||constant|| = 2
     } = (1, 2)
     A2: integer item2 ||constant|| = 3
   } = ((1:2), 3)
   A2: integer item2 ||constant|| = 4
 } = ((1:2, 3), 4)

((1 => 2), 3):4
(1, 2 => 3):4
(1:2 => 3), 4
1:2, 3 => 4
(1:2, 3), 4

* Cleanup

* Test output end: object_container_2
