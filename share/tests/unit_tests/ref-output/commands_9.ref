* Test output: commands_9
*   Purpose: define cuts

*  Initialization

*  Input file

cuts = all Pt > 0 [particle]

*  Parse file

Parse tree:
+  <command_list>  =  <cmd_cuts>
|  +  <cmd_cuts>  =  cuts '=' <lexpr>
|  |  +  cuts  = [keyword] cuts
|  |  +  '='  = [keyword] =
|  |  +  <lexpr>  =  <lsinglet>
|  |  |  +  <lsinglet>  =  <lterm>
|  |  |  |  +  <lterm>  =  <all_fun>
|  |  |  |  |  +  <all_fun>  =  all <lexpr> <pargs1>
|  |  |  |  |  |  +  all  = [keyword] all
|  |  |  |  |  |  +  <lexpr>  =  <lsinglet>
|  |  |  |  |  |  |  +  <lsinglet>  =  <lterm>
|  |  |  |  |  |  |  |  +  <lterm>  =  <compared_expr>
|  |  |  |  |  |  |  |  |  +  <compared_expr>  =  <expr> <comparison>
|  |  |  |  |  |  |  |  |  |  +  <expr>  =  <term>
|  |  |  |  |  |  |  |  |  |  |  +  <term>  =  <factor>
|  |  |  |  |  |  |  |  |  |  |  |  +  <factor>  =  <variable>
|  |  |  |  |  |  |  |  |  |  |  |  |  +  <variable>  = Pt
|  |  |  |  |  |  |  |  |  |  +  <comparison>  =  '>' <expr>
|  |  |  |  |  |  |  |  |  |  |  +  '>'  = [keyword] >
|  |  |  |  |  |  |  |  |  |  |  +  <expr>  =  <term>
|  |  |  |  |  |  |  |  |  |  |  |  +  <term>  =  <factor>
|  |  |  |  |  |  |  |  |  |  |  |  |  +  <factor>  =  <integer_value>
|  |  |  |  |  |  |  |  |  |  |  |  |  |  +  <integer_value>  =  <integer_literal>
|  |  |  |  |  |  |  |  |  |  |  |  |  |  |  +  <integer_literal>  = 0
|  |  |  |  |  |  +  <pargs1>  =  <pexpr>
|  |  |  |  |  |  |  +  <pexpr>  =  <pterm>
|  |  |  |  |  |  |  |  +  <pterm>  =  <pexpr_src>
|  |  |  |  |  |  |  |  |  +  <pexpr_src>  =  <outgoing_prt>
|  |  |  |  |  |  |  |  |  |  +  <outgoing_prt>  =  <cexpr>
|  |  |  |  |  |  |  |  |  |  |  +  <cexpr>  =  <variable>
|  |  |  |  |  |  |  |  |  |  |  |  +  <variable>  = particle

* Compile command list

 cuts: [defined]

* Execute command list

========================================================================
 Runtime data:
========================================================================
 Process library stack: [empty]
========================================================================
 Beam structure: [any particles]
========================================================================
 Cuts:
------------------------------------------------------------------------
+  SEQUENCE    <lexpr>  =  <lsinglet>
+  SEQUENCE    <lsinglet>  =  <lterm>
|  +  SEQUENCE    <lterm>  =  <all_fun>
|  |  +  SEQUENCE    <all_fun>  =  all <lexpr> <pargs1>
|  |  |  +  KEYWORD     all  = [keyword] all
|  |  |  +  SEQUENCE    <lexpr>  =  <lsinglet>
|  |  |  |  +  SEQUENCE    <lsinglet>  =  <lterm>
|  |  |  |  |  +  SEQUENCE    <lterm>  =  <compared_expr>
|  |  |  |  |  |  +  SEQUENCE    <compared_expr>  =  <expr> <comparison>
|  |  |  |  |  |  |  +  SEQUENCE    <expr>  =  <term>
|  |  |  |  |  |  |  |  +  SEQUENCE    <term>  =  <factor>
|  |  |  |  |  |  |  |  |  +  SEQUENCE    <factor>  =  <variable>
|  |  |  |  |  |  |  |  |  |  +  IDENTIFIER  <variable>  = Pt
|  |  |  |  |  |  |  +  SEQUENCE    <comparison>  =  '>' <expr>
|  |  |  |  |  |  |  |  +  KEYWORD     '>'  = [keyword] >
|  |  |  |  |  |  |  |  +  SEQUENCE    <expr>  =  <term>
|  |  |  |  |  |  |  |  |  +  SEQUENCE    <term>  =  <factor>
|  |  |  |  |  |  |  |  |  |  +  SEQUENCE    <factor>  =  <integer_value>
|  |  |  |  |  |  |  |  |  |  |  +  SEQUENCE    <integer_value>  =  <integer_literal>
|  |  |  |  |  |  |  |  |  |  |  |  +  INTEGER     <integer_literal>  = 0
|  |  |  +  ARGUMENTS   <pargs1>  =  <pexpr>
|  |  |  |  +  SEQUENCE    <pexpr>  =  <pterm>
|  |  |  |  |  +  SEQUENCE    <pterm>  =  <pexpr_src>
|  |  |  |  |  |  +  SEQUENCE    <pexpr_src>  =  <outgoing_prt>
|  |  |  |  |  |  |  +  SEQUENCE    <outgoing_prt>  =  <cexpr>
|  |  |  |  |  |  |  |  +  SEQUENCE    <cexpr>  =  <variable>
|  |  |  |  |  |  |  |  |  +  IDENTIFIER  <variable>  = particle
------------------------------------------------------------------------
 Scale: [undefined]
------------------------------------------------------------------------
 Factorization scale: [undefined]
------------------------------------------------------------------------
 Renormalization scale: [undefined]
------------------------------------------------------------------------
 Weight: [undefined]
========================================================================
 Event selection: [undefined]
------------------------------------------------------------------------
 Event reweighting factor: [undefined]
------------------------------------------------------------------------
 Event analysis: [undefined]
------------------------------------------------------------------------
 Event callback: [undefined]
========================================================================
 Process stack: [empty]
========================================================================
 quit     : F
 quit_code: 0
========================================================================
 Logfile  : ''
========================================================================

* Cleanup

* Test output end: commands_9
