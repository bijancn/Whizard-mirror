* Test output: object_base_2
*   Purpose: build composite objects

* Create tag prototype

object tag ||abstract|| (1)

* Instantiate as composite without members

tag obj1 ||abstract|| (1)

* Prototype status

object tag ||abstract|| (2)

* Instantiate as composite with two members

tag obj2 ||abstract|| (1) {
   M1: tag foo ||abstract|| (1)
   M2: tag bar ||abstract|| (1)
 }

* Code of obj2

 c= 100  vt= 2  nv= 1  att= 0 0 1 2 0 0
     obj2

* Prototype status

object tag ||abstract|| (5)
tag obj1 ||abstract|| (1)

* Instantiate further with additional member

type(obj2) obj3 ||abstract|| (1) {
   M1: tag new ||abstract|| (1)
 }

* Prototype status

object tag ||abstract|| (6)
tag obj1 ||abstract|| (1)
tag obj2 ||abstract|| (2) {
   M1: tag foo ||abstract|| (1)
   M2: tag bar ||abstract|| (1)
 }

* Remove obj3

* Prototype status

object tag ||abstract|| (5)
tag obj1 ||abstract|| (1)
tag obj2 ||abstract|| (1) {
   M1: tag foo ||abstract|| (1)
   M2: tag bar ||abstract|| (1)
 }

* Remove obj2

* Prototype status

object tag ||abstract|| (2)
tag obj1 ||abstract|| (1)

* Remove obj1

* Prototype status

object tag ||abstract|| (1)

* Cleanup:

tag allocated = F
prototype allocated = F
obj1 allocated = F
obj2 allocated = F
obj3 allocated = F

* Test output end: object_base_2
