* Test output: object_integer_10
*   Purpose: construct expressions from code

* Prepare repository

object repository ||abstract|| {
   M1: object integer ||abstract||
   M2: integer minus ||operator|unary|abstract||
   M3: integer multiply ||operator|binary|abstract||
   M4: integer add ||operator|binary|abstract||
 }

* Construct object: minus

integer minus ||operator|unary|constant|| {
   A1: integer val_two ||constant|| = 2
 } = ???

* Code from object

 c= 100  vt= 0  nv= 0  att= 2 1 0 1 1 0
 c= 100  vt= 2  nv= 1  att= 1 1 0 0 0 0
     val_two
 c= 2  vt= 3  nv= 1
     2
 c= 2  vt= 0  nv= 0

* Construct object from code

integer minus ||operator|unary|constant|| {
   A1: integer val_two ||constant|| = 2
 } = ???

* Construct object: multiply

integer multiply ||operator|binary|constant|| {
   A1: integer val_two ||constant|| = 2
   O2: *
   A2: integer val_three ||constant|| = 3
 } = ???

* Code from object

 c= 100  vt= 1  nv= 2  att= 3 1 0 2 2 0
     F
     F
 c= 100  vt= 2  nv= 1  att= 1 1 0 0 0 0
     val_two
 c= 2  vt= 3  nv= 1
     2
 c= 100  vt= 2  nv= 1  att= 1 1 0 0 0 0
     val_three
 c= 2  vt= 3  nv= 1
     3
 c= 2  vt= 0  nv= 0

* Construct object from code

integer multiply ||operator|binary|constant|| {
   A1: integer val_two ||constant|| = 2
   O2: *
   A2: integer val_three ||constant|| = 3
 } = ???

* Construct object: add

integer add ||operator|binary|constant|| {
   A1: integer val_two ||constant|| = 2
   O2: -
   A2: integer val_three ||constant|| = 3
 } = ???

* Code from object

 c= 100  vt= 1  nv= 2  att= 4 1 0 2 2 0
     F
     T
 c= 100  vt= 2  nv= 1  att= 1 1 0 0 0 0
     val_two
 c= 2  vt= 3  nv= 1
     2
 c= 100  vt= 2  nv= 1  att= 1 1 0 0 0 0
     val_three
 c= 2  vt= 3  nv= 1
     3
 c= 2  vt= 0  nv= 0

* Construct object from code

integer add ||operator|binary|constant|| {
   A1: integer val_two ||constant|| = 2
   O2: -
   A2: integer val_three ||constant|| = 3
 } = ???

* Cleanup

* Test output end: object_integer_10
