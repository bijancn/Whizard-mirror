%  omega_parameters_tool.nw --
%
%  Copyright (C) 1999-2017 by 
%      Wolfgang Kilian <kilian@physik.uni-siegen.de>
%      Thorsten Ohl <ohl@physik.uni-wuerzburg.de>
%      Juergen Reuter <juergen.reuter@desy.de>
%      Christian Speckner <cnspeckn@googlemail.com>
%
%  WHIZARD is free software; you can redistribute it and/or modify it
%  under the terms of the GNU General Public License as published by 
%  the Free Software Foundation; either version 2, or (at your option)
%  any later version.
%
%  WHIZARD is distributed in the hope that it will be useful, but
%  WITHOUT ANY WARRANTY; without even the implied warranty of
%  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
%  GNU Genel Public License for more details.
%           
%  You shou have received a copy of the GNU General Public License
%  along wi this program; if not, write to the Free Software
%  Foundati, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
%           
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@           
<<[[omega_aux_functions.f90]]>>=
<<Copyleft> 
module omega_aux_function
  use kinds 
  use omega_constants
  use omega_parameters      
         
  implicit none
  private

  integer, parameter, public :: &
       n0 = 5, nloop = 2 
  real(kind=default), parameter :: &
       acc = 1.e-12_default
  real(kind=default), parameter :: &
       asmz = 0.118_default
  type(parameter_set) :: par

  function faux (x) result (y)
    real(kind=default) :: x
    complex(kind=default) :: y
    if (1 <= x) then
       y = asin(sqrt(1/x))**2
    else
       y = - 1/4.0_default * (log((1 + sqrt(1 - x))/ &
            (1 - sqrt(1 - x))) - cmplx (0.0_default, PI))**2
    end if
  end function faux

  function fonehalf (x) result (y)
    real(kind=default), intent(in) :: x
    complex(kind=default) :: y
    if (x==0) then
       y = 0
    else
       y = - 2.0_default * x * (1 + (1 - x) * faux(x))
    end if
  end function fonehalf

  function fone (x) result  (y)
    real(kind=default), intent(in) :: x
    complex(kind=default) :: y
    if (x==0) then
       y = 2.0_default
    else
       y = 2.0_default + 3.0_default * x + &
            3.0_default * x * (2.0_default - x) * &
            faux(x)
    end if
  end function fone

  function gaux (x) result (y)
    real(kind=default), intent(in) :: x
    complex(kind=default) :: y
    if (1 <= x) then
       y = sqrt(x - 1) * asin(sqrt(1/x))
    else
       y = sqrt(1 - x) * (log((1 + sqrt(1 - x)) / &
            (1 - sqrt(1 - x))) - cmplx (0.0_default, PI)) / 2
    end if
  end function gaux

  function i1 (a,b) result (y)
    real(kind=default), intent(in) :: a,b
    complex(kind=default) :: y
    y = a*b/2.0_default/(a-b) + a**2 * b**2/2.0_default/(a-b)**2 * &
         (faux(a) - faux(b)) + &
         a**2 * b/(a-b)**2 * (gaux(a) - gaux(b))
  end function i1

  function i2 (a,b) result (y) 
    real(kind=default), intent(in) :: a,b
    complex(kind=default) :: y
    y = - a * b / 2.0_default / (a-b) * (faux(a) - faux(b)) 
  end function i2

  function b0 (nf) result (bnull)
    integer, intent(in) :: nf
    real(kind=default) :: bnull
    bnull = 33.0_default - 2.0_default * nf
  end function b0

  function b1 (nf) result (bone)
    integer, intent(in) :: nf
    real(kind=default) :: bone
    bone = 6.0_default * (153.0_default - 19.0_default * nf)/b0(nf)**2
  end function b1

  function aa (nf) result (aaa)
    integer, intent(in) :: nf
    real(kind=default) :: aaa
    aaa = 12.0_default * PI / b0(nf)
  end function aa

  function bb (nf) result (bbb)
    integer, intent(in) :: nf
    real(kind=default) :: bbb
    bbb = b1(nf) / aa(nf)
  end function bb

end module omega_aux_functions
@


@ %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<<Copyleft>>=
!  omega_parameters_tool.nw --
!
!  Copyright (C) 1999-2009 by 
!      Wolfgang Kilian <kilian@physik.uni-siegen.de>
!      Thorsten Ohl <ohl@physik.uni-wuerzburg.de>
!      Juergen Reuter <juergen.reuter@desy.de>
!
!  WHIZARD is free software; you can redistribute it and/or modify it
!  under the terms of the GNU General Public License as published by 
!  the Free Software Foundation; either version 2, or (at your option)
!  any later version.
!
!  WHIZARD is distributed in the hope that it will be useful, but
!  WITHOUT ANY WARRANTY; without even the implied warranty of
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License
!  along with this program; if not, write to the Free Software
!  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
@ %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Local Variables:
% mode:noweb
% noweb-doc-mode:latex-mode
% noweb-code-mode:f90-mode
% indent-tabs-mode:nil
% page-delimiter:"^@ %%%.*\n"
% End:
