stages:
  - autotools
  - build
  - deploy

variables:
  NAGFOR_OPTIONS: "-O1 -w=all -C=all -gline -nan -f2008"
  JOBS: "-j2"

autotools:
  stage: autotools
  script:
    - ./build_master.sh
    - autoreconf
  artifacts:
    untracked: true
    when: always
    expire_in: 3 weeks
  except:
    - production

.default_template: &default_definition
  stage: build
  before_script:
    - mkdir -p build
    - cd build
  except:
    - production
    - /^.*xfail.*$/
  dependencies:
    - autotools
  artifacts:
    expire_in: 3 weeks
    when: always
    paths:
    - build/configure.log
    - build/make.log
    - build/make-install.log
    - build/circe2/tests/test-suite.log
    - build/omega/tests/test-suite.log
    - build/vamp/tests/test-suite.log
    - build/tests/unit_tests/test-suite.log
    - build/tests/functional_tests/test-suite.log

.extra_template: &extra_definition
  <<: *default_definition
  only:
    - master
    - /^testing.*$/

.distcheck_template: &distcheck_definition
  <<: *default_definition
  only:
    - master
    - /^testing.*$/
  artifacts:
    expire_in: 3 weeks
    when: always
    paths:
    - build/configure.log
    - build/make.log
    - build/make-install.log
    - build/whizard.tar.gz
    - build/make-distcheck.log
  after_script:
  - mv whizard*/*.tar.gz whizard.tar.gz
  - find . -type f -exec chmod 644 {} +
  - find . -type d -exec chmod 755 {} +
  - rm whizard*/ -rf

build.nagfor-6:
  <<: *default_definition
  script:
    - ../configure FC=nagfor FCFLAGS="$NAGFOR_OPTIONS" --disable-static --prefix="`pwd`/install" > configure.log
    - make $JOBS -s V=0 > make.log
    - make $JOBS -s V=0 install > make-install.log
    - make $JOBS -s V=0 check
  tags:
    - nagfor

build.gfortran:
  <<: *default_definition
  script:
    - ../configure FC=gfortran FCFLAGS="-O0" --disable-static --prefix="`pwd`/install" > configure.log
    - make $JOBS -s V=0 > make.log
    - make $JOBS -s V=0 install > make-install.log
    - make $JOBS -s V=0 check

build.gfortran.osx:
  <<: *default_definition
  script:
    - ../configure FC=gfortran FCFLAGS="-O0" --prefix="`pwd`/install" --enable-distribution --enable-hepmc --enable-lcio --enable-lhapdf --enable-hoppet --enable-fastjet --enable-looptools LOOPTOOLS_DIR=/usr/local/lib --enable-gosam --enable-openloops --enable-pythia8 > configure.log
    - make $JOBS -s V=0 > make.log
    - make $JOBS -s V=0 install > make-install.log
    - make $JOBS -s V=0 check
  tags:
    - osx
  only:
    - master
    - /^testing.*$/    

build.ifort-16:
  <<: *default_definition
  script:
    - source /opt/intel/2016/bin/compilervars.sh intel64
    - ../configure FC=ifort2016 FCFLAGS="-O1" --disable-static --prefix="`pwd`/install" > configure.log
    - make $JOBS -s V=0 > make.log
    - make $JOBS -s V=0 install > make-install.log
    - make $JOBS -s V=0 check
  tags:
    - ifort

distcheck.static.nagfor-6:
  <<: *distcheck_definition
  script:
    - ../configure FC=nagfor FCFLAGS="$NAGFOR_OPTIONS" --enable-distribution --enable-static --prefix="`pwd`/install" > configure.log
    - make $JOBS -s V=0 distcheck > make-distcheck.log
  tags:
    - nagfor
    - latex

build.disabled.static.nagfor-6:
  <<: *extra_definition
  script:
    - ../configure --disable-lhapdf --disable-hepmc --disable-lcio --disable-pythia8 --disable-fastjet --disable-hoppet --disable-gosam --disable-openloops --disable-looptools  --disable-pythia6 --enable-distribution FC=nagfor FCFLAGS="$NAGFOR_OPTIONS" --prefix="`pwd`/install" > configure.log
    - make $JOBS -s V=0 > make.log
    - make $JOBS -s V=0 install > make-install.log
    - make $JOBS -s V=0 check
  tags:
    - nagfor
    - latex

build.extended.gfortran:
  <<: *extra_definition
  script:
    - ../configure --with-precision=extended FC=gfortran FCFLAGS="-O0" --disable-static --prefix="`pwd`/install" > configure.log
    - make $JOBS -s V=0 > make.log
    - make $JOBS -s V=0 install > make-install.log
    - make $JOBS -s V=0 check

build.openmp.gfortran:
  <<: *extra_definition
  script:
    - ../configure --enable-fc-openmp FC=gfortran FCFLAGS="-O0" --disable-static --prefix="`pwd`/install" > configure.log
    - make $JOBS -s V=0 > make.log
    - make $JOBS -s V=0 install > make-install.log
    - make $JOBS -s V=0 check

build.quadruple.ifort:
  <<: *extra_definition
  script:
    - ../configure --with-precision=quadruple FC=ifort FCFLAGS="-O1" --disable-static --prefix="`pwd`/install" > configure.log
    - make $JOBS -s V=0 > make.log
    - make $JOBS -s V=0 install > make-install.log
    - make $JOBS -s V=0 check
  tags:
    - ifort

build.stdsemantics.ifort-16:
  <<: *extra_definition
  script:
    - source /opt/intel/2016/bin/compilervars.sh intel64
    - ../configure FC=ifort2016 FCFLAGS="-O1 -standard-semantics" --disable-static --prefix="`pwd`/install" > configure.log
    - make $JOBS -s V=0 > make.log
    - make $JOBS -s V=0 install > make-install.log
    - make $JOBS -s V=0 check
  tags:
    - ifort

build.ifort-17:
  <<: *extra_definition
  script:
    - source /opt/intel/2017/bin/compilervars.sh intel64
    - ../configure FC=ifort2017 FCFLAGS="-O1" --disable-static --prefix="`pwd`/install" > configure.log
    - make $JOBS -s V=0 > make.log
    - make $JOBS -s V=0 install > make-install.log
    - make $JOBS -s V=0 check
  tags:
    - ifort
  allow_failure: true

.deploy_template: &deploy_definition
  stage: deploy
  tags:
    - deployment
  only:
    - master
  before_script:
    - eval `ssh-agent -s`
    - ssh-add /scratch/bcho/id_rsa
  except:
    - production
    - /^.*xfail.*$/

deploy to production:
  <<: *deploy_definition
  script:
    - git remote set-url --push origin git@gitlab.tp.nt.uni-siegen.de:whizard/development.git
    - git checkout production
    - git merge master --ff-only
    - git push

deploy to svn:
  <<: *deploy_definition
  script:
    - svn co svn+ssh://jr_reuter@svn.hepforge.org/hepforge/svn/whizard/trunk trunk
    - cp .git trunk/ -r
    - cd trunk
    - git status
    - git checkout -- .
    - git clean -d -f
    - svn diff > ../svndiff.log || true
    - svn status | grep "^?" | grep -v '.git$' | awk '{print $2}' >| ../svn-add-files.log || true
    - svn status | grep "^\!" | grep -v '.git$' | awk '{print $2}' >| ../svn-del-files.log || true
    - if test -s ../svn-add-files.log ; then cat ../svn-add-files.log | xargs svn add ; fi
    - if test -s ../svn-del-files.log ; then cat ../svn-del-files.log | xargs svn rm ; fi
    - git log --format="%h %s" -n 1 HEAD > svn-commit.msg
    - svn commit --file=svn-commit.msg
  artifacts:
    paths:
    - svndiff.log
    - svn-add-files.log
    - svn-del-files.log
