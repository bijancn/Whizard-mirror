## Makefile.am -- Makefile for model-parameter modules in WHIZARD
##
## Process this file with automake to produce Makefile.in
#
# Copyright (C) 1999-2015 by 
#     Wolfgang Kilian <kilian@physik.uni-siegen.de>
#     Thorsten Ohl <ohl@physik.uni-wuerzburg.de>
#     Juergen Reuter <juergen.reuter@desy.de>
#     with contributions from
#     Christian Speckner <cnspeckn@googlemail.com>
#
# WHIZARD is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by 
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# WHIZARD is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
########################################################################

## Build model-specific extra sources.
SUBDIRS = \
	SM_tt_threshold_bundle \
	threeshl_bundle

## Build WHIZARD/O'Mega model interface library
## These modules transfer WHIZARD's parameters to the matrix-element code
## as generated by O'Mega
noinst_LTLIBRARIES = libmodels.la

libmodels_la_SOURCES = \
  parameters.2HDM.f90 \
  parameters.2HDM_CKM.f90 \
  parameters.AltH.f90 \
  parameters.GravTest.f90 \
  parameters.HSExt.f90 \
  parameters.Littlest.f90 \
  parameters.Littlest_Eta.f90 \
  parameters.Littlest_Tpar.f90 \
  parameters.MSSM.f90 \
  parameters.MSSM_CKM.f90 \
  parameters.MSSM_Grav.f90 \
  parameters.MSSM_Hgg.f90 \
  parameters.NMSSM.f90 \
  parameters.NMSSM_CKM.f90 \
  parameters.NMSSM_Hgg.f90 \
  parameters.NoH_rx.f90 \
  parameters.QED.f90 \
  parameters.QCD.f90 \
  parameters.PSSSM.f90 \
  parameters.Simplest.f90 \
  parameters.Simplest_univ.f90 \
  parameters.SM.f90 \
  parameters.SM_ac.f90 \
  parameters.SM_ac_CKM.f90 \
  parameters.SM_CKM.f90 \
  parameters.SM_top.f90 \
  parameters.SM_top_anom.f90 \
  parameters.SM_tt_threshold.f90 \
  parameters.SM_Higgs.f90 \
  parameters.SM_rx.f90 \
  parameters.SM_ul.f90 \
  parameters.Template.f90 \
  parameters.UED.f90 \
  parameters.SSC.f90 \
  parameters.SSC_2.f90 \
  parameters.SSC_AltT.f90 \
  parameters.Xdim.f90 \
  parameters.Zprime.f90 \
  parameters.Threeshl.f90 \
  parameters.Threeshl_nohf.f90 \
  parameters.Test.f90


## Install the modules used by generated matrix element code
execmoddir = $(pkglibdir)/mod/models
nodist_execmod_HEADERS = \
  parameters_2hdm.$(FC_MODULE_EXT) \
  parameters_2hdm_ckm.$(FC_MODULE_EXT) \
  parameters_alth.$(FC_MODULE_EXT) \
  parameters_gravtest.$(FC_MODULE_EXT) \
  parameters_hsext.$(FC_MODULE_EXT) \
  parameters_littlest.$(FC_MODULE_EXT) \
  parameters_littlest_eta.$(FC_MODULE_EXT) \
  parameters_littlest_tpar.$(FC_MODULE_EXT) \
  parameters_mssm.$(FC_MODULE_EXT) \
  parameters_mssm_ckm.$(FC_MODULE_EXT) \
  parameters_mssm_hgg.$(FC_MODULE_EXT) \
  parameters_mssm_grav.$(FC_MODULE_EXT) \
  parameters_nmssm.$(FC_MODULE_EXT) \
  parameters_nmssm_ckm.$(FC_MODULE_EXT) \
  parameters_nmssm_hgg.$(FC_MODULE_EXT) \
  parameters_noh_rx.$(FC_MODULE_EXT) \
  parameters_qed.$(FC_MODULE_EXT) \
  parameters_qcd.$(FC_MODULE_EXT) \
  parameters_psssm.$(FC_MODULE_EXT) \
  parameters_simplest.$(FC_MODULE_EXT) \
  parameters_simplest_univ.$(FC_MODULE_EXT) \
  parameters_sm.$(FC_MODULE_EXT) \
  parameters_sm_ac.$(FC_MODULE_EXT) \
  parameters_sm_ac_ckm.$(FC_MODULE_EXT) \
  parameters_sm_ckm.$(FC_MODULE_EXT) \
  parameters_sm_top.$(FC_MODULE_EXT) \
  parameters_sm_top_anom.$(FC_MODULE_EXT) \
  parameters_sm_tt_threshold.$(FC_MODULE_EXT) \
  parameters_sm_higgs.$(FC_MODULE_EXT) \
  parameters_sm_rx.$(FC_MODULE_EXT) \
  parameters_sm_ul.$(FC_MODULE_EXT) \
  parameters_template.$(FC_MODULE_EXT) \
  parameters_ued.$(FC_MODULE_EXT) \
  parameters_ssc.$(FC_MODULE_EXT) \
  parameters_ssc_2.$(FC_MODULE_EXT) \
  parameters_ssc_altt.$(FC_MODULE_EXT) \
  parameters_xdim.$(FC_MODULE_EXT) \
  parameters_zprime.$(FC_MODULE_EXT) \
  parameters_threeshl.$(FC_MODULE_EXT) \
  parameters_threeshl_nohf.$(FC_MODULE_EXT) \
  parameters_test.$(FC_MODULE_EXT)

## Build WHIZARD auxiliary dynamic libraries for model access
## These modules handle initialization operations that are not accounted
## for by definitions in the model files (external parameters).
modellibdir = $(pkglibdir)/models

modellib_LTLIBRARIES = \
  external.SM_tt_threshold.la \
  external.Threeshl.la \
  external.Threeshl_nohf.la \
  external.Test.la

external_SM_tt_threshold_la_SOURCES = external.SM_tt_threshold.f90
external_SM_tt_threshold_la_LDFLAGS = -module

external_Threeshl_la_SOURCES = external.Threeshl.f90
external_Threeshl_la_LDFLAGS = -module
external_Threeshl_nohf_la_SOURCES = external.Threeshl_nohf.f90
external_Threeshl_nohf_la_LDFLAGS = -module

external_Test_la_SOURCES = external.Test.f90
external_Test_la_LDFLAGS = -module

## Collect the SM ttbar threshold code.
external_SM_tt_threshold_la_LIBADD = SM_tt_threshold_bundle/libSM_tt_threshold_bundle.la
libmodels_la_LIBADD = SM_tt_threshold_bundle/libSM_tt_threshold_bundle.la

## Collect the 3SHL code.
external_Threeshl_la_LIBADD = threeshl_bundle/libthreeshl_bundle.la
libmodels_la_LIBADD += threeshl_bundle/libthreeshl_bundle.la
external_Threeshl_nohf_la_LIBADD = threeshl_bundle/libthreeshl_bundle.la

## Switch off optimization if requested
## Optimization is useless here, it just consumes compile time.

if !OPTIMIZATION_FOR_PARFILES
NO_OPT=-O0
endif

.f90.o:
	$(FCCOMPILE) $(NO_OPT) -c -o $@ $<

.f90.obj:
	$(FCCOMPILE) $(NO_OPT) -c -o $@ `$(CYGPATH_W) '$<'`

.f90.lo:
	$(LTFCCOMPILE) $(NO_OPT) -c -o $@ $<

## The mismatch of filenames and module names requires a lot of repetition:
parameters_2hdm.$(FC_MODULE_EXT): parameters.2HDM.lo
	@:

parameters_2hdm_ckm.$(FC_MODULE_EXT): parameters.2HDM_CKM.lo
	@:

parameters_alth.$(FC_MODULE_EXT): parameters.2HDM_CKM.lo
	@:

parameters_gravtest.$(FC_MODULE_EXT): parameters.GravTest.lo
	@:

parameters_hsext.$(FC_MODULE_EXT): parameters.HSExt.lo
	@:

parameters_littlest.$(FC_MODULE_EXT): parameters.Littlest.lo
	@:

parameters_littlest_eta.$(FC_MODULE_EXT): parameters.Littlest_Eta.lo
	@:

parameters_littlest_tpar.$(FC_MODULE_EXT): parameters.Littlest_Tpar.lo
	@:

parameters_mssm.$(FC_MODULE_EXT): parameters.MSSM.lo
	@:

parameters_mssm_4.$(FC_MODULE_EXT): parameters.MSSM_4.lo
	@:

parameters_mssm_ckm.$(FC_MODULE_EXT): parameters.MSSM_CKM.lo
	@:

parameters_mssm_grav.$(FC_MODULE_EXT): parameters.MSSM_Grav.lo
	@:

parameters_mssm_hgg.$(FC_MODULE_EXT): parameters.MSSM_Hgg.lo
	@:

parameters_nmssm.$(FC_MODULE_EXT): parameters.NMSSM.lo
	@:

parameters_nmssm_ckm.$(FC_MODULE_EXT): parameters.NMSSM_CKM.lo
	@:

parameters_nmssm_hgg.$(FC_MODULE_EXT): parameters.NMSSM_Hgg.lo
	@:

parameters_noh_rx.$(FC_MODULE_EXT): parameters.NoH_rx.lo
	@:

parameters_psssm.$(FC_MODULE_EXT): parameters.PSSSM.lo
	@:

parameters_qcd.$(FC_MODULE_EXT): parameters.QCD.lo
	@:

parameters_qed.$(FC_MODULE_EXT): parameters.QED.lo
	@:

parameters_sm.$(FC_MODULE_EXT): parameters.SM.lo
	@:

parameters_sm_ckm.$(FC_MODULE_EXT): parameters.SM_CKM.lo
	@:

parameters_sm_ac.$(FC_MODULE_EXT): parameters.SM_ac.lo
	@:

parameters_sm_ac_ckm.$(FC_MODULE_EXT): parameters.SM_ac_CKM.lo
	@:

parameters_sm_top.$(FC_MODULE_EXT): parameters.SM_top.lo
	@:

parameters_sm_top_anom.$(FC_MODULE_EXT): parameters.SM_top_anom.lo
	@:

parameters_sm_tt_threshold.$(FC_MODULE_EXT): parameters.SM_tt_threshold.lo
	@:

parameters_sm_higgs.$(FC_MODULE_EXT): parameters.SM_Higgs.lo
	@:

parameters_sm_rx.$(FC_MODULE_EXT): parameters.SM_rx.lo
	@:

parameters_sm_ul.$(FC_MODULE_EXT): parameters.SM_ul.lo
	@:

parameters_simplest.$(FC_MODULE_EXT): parameters.Simplest.lo
	@:

parameters_simplest_univ.$(FC_MODULE_EXT): parameters.Simplest_univ.lo
	@:

parameters_template.$(FC_MODULE_EXT): parameters.Template.lo
	@:

parameters_test.$(FC_MODULE_EXT): parameters.Test.lo
	@:

parameters_threeshl.$(FC_MODULE_EXT): parameters.Threeshl.lo
	@:

parameters_threeshl_nohf.$(FC_MODULE_EXT): parameters.Threeshl_nohf.lo
	@:

parameters_ued.$(FC_MODULE_EXT): parameters.UED.lo
	@:

parameters_ssc.$(FC_MODULE_EXT): parameters.SSC.lo
	@:

parameters_ssc_2.$(FC_MODULE_EXT): parameters.SSC_2.lo
	@:

parameters_ssc_altt.$(FC_MODULE_EXT): parameters.SSC_AltT.lo
	@:

parameters_xdim.$(FC_MODULE_EXT): parameters.Xdim.lo
	@:

parameters_zprime.$(FC_MODULE_EXT): parameters.Zprime.lo
	@:

########################################################################
## Dependency on O'Mega modules

basicsdir = $(top_builddir)/src/basics
testingdir = $(top_builddir)/src/testing
utilitiesdir = $(top_builddir)/src/utilities
systemdir = $(top_builddir)/src/system
physicsdir = $(top_builddir)/src/physics
combinatoricsdir = $(top_builddir)/src/combinatorics
omegadir = $(top_builddir)/omega/src

KINDS_MOD = kinds.$(FC_MODULE_EXT)
CONSTANTS_MOD = constants.$(FC_MODULE_EXT)
PHYSICS_DEFS_MOD = physics_defs.$(FC_MODULE_EXT)
FORMAT_DEFS_MOD = format_defs.$(FC_MODULE_EXT)
DIAGNOSTICS_MOD = diagnostics.$(FC_MODULE_EXT)
SMPHYSICS_MOD = sm_physics.$(FC_MODULE_EXT)
SOLVER_MOD = solver.$(FC_MODULE_EXT)
OMEGAVECTORS_MOD = omega_vectors.$(FC_MODULE_EXT)
TTV_FORMFACTORS_MOD = ttv_formfactors.$(FC_MODULE_EXT)

### To be changed when moved in an external physics library
$(libmodels_la_OBJECTS) $(external_SM_tt_threshold_la_OBJECTS) $(external_Threeshl_la_OBJECTS): \
  $(basicsdir)/$(KINDS_MOD) \
  $(basicsdir)/$(CONSTANTS_MOD) \
  $(utilitiesdir)/$(FORMAT_DEFS_MOD) \
  $(systemdir)/$(DIAGNOSTICS_MOD) \
  $(physicsdir)/$(PHYSICS_DEFS_MOD) \
  $(physicsdir)/$(SMPHYSICS_MOD) \
  $(combinatoricsdir)/$(SOLVER_MOD) \
  $(omegadir)/$(OMEGAVECTORS_MOD) \
  SM_tt_threshold_bundle/$(TTV_FORMFACTORS_MOD) \
  threeshl_bundle/threeshl.$(FC_MODULE_EXT) \
  threeshl_bundle/tglue.$(FC_MODULE_EXT)

AM_FCFLAGS = -I$(basicsdir) -I$(testingdir) -I$(utilitiesdir) -I$(systemdir) -I$(physicsdir) -I$(combinatoricsdir) -I$(omegadir) -ISM_tt_threshold_bundle -Ithreeshl_bundle

########################################################################
## Default Fortran compiler options

## Profiling
if FC_USE_PROFILING
AM_FCFLAGS += $(FCFLAGS_PROFILING)
endif

## OpenMP
if FC_USE_OPENMP
AM_FCFLAGS += $(FCFLAGS_OPENMP)
endif

########################################################################
## Threeshl and Threeshl_nohf are identical
parameters.Threeshl_nohf.f90: parameters.Threeshl.f90
	sed -e 's/\(module parameters_threeshl\)/\1_nohf/' < $< > $@
external.Threeshl_nohf.f90: external.Threeshl.f90
	cp $< $@

########################################################################
## Non-standard cleanup tasks
CLEANFILES = \
  parameters.Threeshl_nohf.f90 \
  external.Threeshl_nohf.f90

clean-local:
	-rm -f *.$(FC_MODULE_EXT)
if FC_SUBMODULES
	-rm -f *.smod
endif

## Remove backup files
maintainer-clean-local:
	-rm -f *~
