#!/bin/bash
#
#    This is whizard_relocate, a tool to relocate the whizard directory to 
#    a place that you did not specify in configure stage.
#    Copyright (C) 1999-2016 by 
#        Wolfgang Kilian <kilian@physik.uni-siegen.de>
#        Thorsten Ohl <ohl@physik.uni-wuerzburg.de>
#        Juergen Reuter <juergen.reuter@desy.de>
#        with contributions from
#        Christian Speckner <cnspeckn@googlemail.com>
#        and others
#
#    WHIZARD is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    WHIZARD is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

name=whizard_relocate
args="whizard_prefix lhapdf_prefix lhapdf_pdfdir lhapdf_libdir"

function print_usage {
    echo \
"This is whizard_relocate, a tool to relocate the whizard directory to a place
that you did not specify in configure stage. This tool does not move any files
to the new directory, it only tells whizard that it has been moved. Thus you have
to move the whizard directory before using whizard_relocate.

Usage:
$name -h
$name [options]
 
Options are:
 --whizard_prefix <DIR>
 --lhapdf_prefix <DIR>
 --lhapdf_pdfdir <DIR>
 --lhapdf_libdir <DIR>

You can set all options either by command arguments or by environment variables,
for example \"export whizard_prefix=/opt/whizard\". If you do both then command
arguments override environment variables.
 --whizard_prefix <DIR>   The new location of the WHIZARD project. This directory
                          contains bin/whizard. You must either set the 
                          whizard_prefix environment variable or specify this
                          argument.
 --lhapdf_prefix <DIR>    The location of LHAPDF. Unless given, it falls back to
                          values with following rule of precedence: 
                          1.) Output of \"lhapdf-config --prefix\" 
                          2.) \$whizard_prefix
 --lhapdf_pdfdir <DIR>	  The location of LHAPDF pdf sets. Unless given, it falls
                          back to values with following rule of precedence: 
                          1.) Output of \"lhapdf-config --pdfsets-path\" 
                          2.) \$lhapdf_prefix/share/lhapdf/PDFsets
 --lhapdf_libdir <DIR>    The location of LHAPDF libraries. Unless given, it falls
                          back to values with following rule of precedence: 
                          1.) Output of \"lhapdf-config --libdir\" 
                          2.) \$lhapdf_prefix/lib
"
}

# processing arguments
while [ -n "$1" ]
do
    if [ "$1" == "-h" ]
    then
	print_usage
	exit 1
    fi
    valid=0
    for arg in $args
    do
	if [ "$1" == "--$arg" ]
	then
	    shift
	    eval "$arg=$1"
	    valid=1
	fi
    done
    if [ "$valid" -eq 0 ]
    then
	echo $1 is no valid argument.
	exit 1
    fi
    shift
done

# setting default values
if [ -z "$whizard_prefix" ]
then
    echo Please assign a value to whizard_prefix or call this script with \"--whizard_prefix /path/to/whizard\". whizard_prefix must contain a subdirectory \"bin\" which must contain the whizard binaries.
    exit 2
fi
if [ ! -f "$whizard_prefix/bin/whizard" ]
then
    echo I cannot find the whizard binary in \$whizard_prefix/bin.
    echo The actual value of whizard_prefix is $whizard_prefix.
    exit 3
fi
if [ -z "$lhapdf_prefix" ]
then
    lhapdf_prefix=`lhapdf-config --prefix 2> /dev/null`
    if [ -z "$lhapdf_prefix" ]
    then
	if [ -f "$whizard_prefix/bin/lhapdf-config" ]
	then
	    lhapdf_prefix=$whizard_prefix
	else
	    echo I cannot find LHAPDF. Please assign a value to lhapdf_prefix or call this script with \"--lhapdf_prefix /path/to/lhapdf\".
	    exit 4
	fi
    fi
fi
if [ -z "$lhapdf_pdfdir" ]
then
    lhapdf_pdfdir=`$lhapdf_prefix/bin/lhapdf-config --pdfsets-path 2> /dev/null`
    if [ -z "$lhapdf_pdfdir" ]
    then
	lhapdf_pdfdir=`lhapdf-config --pdfsets-path 2> /dev/null`
	if [ -z "$lhapdf_pdfdir" ]
	then
	    lhapdf_pdfdir=$lhapdf_prefix/share/lhapdf/PDFsets
	fi
    fi
fi
if [ -z "$lhapdf_libdir" ]
then
    lhapdf_libdir=`$lhapdf_prefix/bin/lhapdf-config --libdir 2> /dev/null`
    if [ -z "$lhapdf_libdir" ]
    then
	lhapdf_libdir=`lhapdf-config --libdir 2> /dev/null`
	if [ -z "$lhapdf_libdir" ]
	then
	    lhapdf_libdir=$lhapdf_prefix/lib
	fi
    fi
fi

# this is for debugging
for arg in $args
do
    eval "earg=\$$arg"
    echo $arg=$earg
done

# The actual relocation
echo
echo whizard-setup.sh --prefix $whizard_prefix
$whizard_prefix/bin/whizard-setup.sh --prefix $whizard_prefix
echo
echo libtool-relocate.sh --prefix $whizard_prefix --lhapdf $lhapdf_libdir 
$whizard_prefix/bin/libtool-relocate.sh --prefix $whizard_prefix --lhapdf $lhapdf_libdir
echo
echo libtool-config.sh --prefix $whizard_prefix
$whizard_prefix/bin/libtool-config.sh --prefix $whizard_prefix
mv libtool $whizard_prefix

# creation of a shell wrapper for whizard
echo \
"#!/bin/bash
if [ -z \"\$LD_LIBRARY_PATH\" ]
then
export LD_LIBRARY_PATH=$whizard_prefix/lib
else
export LD_LIBRARY_PATH=$whizard_prefix/lib:\$LD_LIBRARY_PATH
fi
export PATH=$whizard_prefix/bin:$PATH
$whizard_prefix/bin/whizard --prefix=$whizard_prefix --libtool=$whizard_prefix/libtool --lhapdfdir=$lhapdf_pdfdir \$@
" > $whizard_prefix/bin/whizard.sh
chmod +x $whizard_prefix/bin/whizard.sh

# Everything is done.
echo "
Relocation of whizard is done. Please do not call whizard directly, use the shell
wrapper \"whizard.sh\" instead. You might want to add a line like:
alias \"whizard=$whizard_prefix/bin/whizard.sh\"
to a .bash_profile or .bashrc file. Have a lot of fun with WHIZARD.
"
